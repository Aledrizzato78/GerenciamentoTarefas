README.md - Gerenciamento de Tarefas
Este projeto é um sistema de Gerenciamento de Tarefas desenvolvido com Spring Boot no backend e um front-end simples em HTML, CSS e JavaScript para interagir com o banco de dados via API REST.
Links Importantes

Repositório do Projeto: https://github.com/Aledrizzato78/gerenciamento-tarefas.git
API Base URL: http://localhost:8080/api/items
Frontend URL: http://localhost:8080/index.html
H2 Console: http://localhost:8080/h2-console

Funcionalidades

Inserção de Tarefas: Permite adicionar uma nova tarefa com nome, descrição e prioridade.
Consulta de Tarefas: Exibe todas as tarefas existentes no banco de dados.
Prioridade: As tarefas podem ser marcadas como prioritárias.
Persistência: As tarefas são salvas em um banco de dados relacional (H2 para desenvolvimento).

Tecnologias Utilizadas

Backend: Spring Boot 2.7.18
Frontend: HTML, CSS, JavaScript
Banco de Dados: H2 (em memória para testes)
Ferramentas de Teste: JUnit 5, Mockito
Maven: Gerenciador de dependências e plugins

Instruções de Uso
1. Configuração do Ambiente
Requisitos

Java 17
Maven
IDE como IntelliJ IDEA ou VSCode

Configuração do Backend (Spring Boot)

Clone este repositório:
bashCopygit clone https://github.com/Aledrizzato78/gerenciamento-tarefas.git
cd gerenciamento-tarefas

Compile e execute o projeto:
bashCopymvn clean install
mvn spring-boot:run


O servidor Spring Boot será iniciado na porta 8080. A API estará disponível em http://localhost:8080/api/items.
Endpoints da API

GET http://localhost:8080/api/items - Retorna todas as tarefas.
POST http://localhost:8080/api/items - Adiciona uma nova tarefa.

Exemplo de JSON para adicionar uma tarefa:
jsonCopy{
  "nome": "Tarefa Exemplo",
  "descricao": "Descrição da tarefa",
  "prioridade": true,
  "concluido": false
}
2. Configuração do Frontend (HTML)
O front-end básico em HTML está localizado no diretório src/main/resources/static.
O arquivo principal é index.html. Ele contém um formulário para adicionar tarefas e uma tabela para exibir as tarefas salvas no banco de dados.
Para acessar o Frontend, após iniciar o backend, abra o seguinte URL no navegador:
http://localhost:8080/index.html
3. Consultar o Banco de Dados via HTML
O JavaScript embutido no arquivo index.html usa a API Fetch para consultar o banco de dados e exibir as informações dinamicamente.
4. Testes Automatizados
Para rodar os testes, use o Maven:
bashCopymvn test
5. Banco de Dados H2
Durante o desenvolvimento, o banco de dados H2 é usado para persistir os dados temporariamente.
Para acessar o Console do H2:

Acesse http://localhost:8080/h2-console
Use as seguintes credenciais:

JDBC URL: jdbc:h2:mem:testdb
User: sa
Password: (deixe vazio)





